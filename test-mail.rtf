{\rtf1\ansi\ansicpg936\cocoartf2512
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww16200\viewh13200\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs36 \cf0 test-mail-filepackage com.example.demo.service;\
\
import lombok.extern.slf4j.Slf4j;\
import org.springframework.beans.factory.annotation.Value;\
\
import org.springframework.stereotype.Service;\
import org.springframework.util.StringUtils;\
\
import javax.activation.DataHandler;\
import javax.activation.DataSource;\
import javax.activation.FileDataSource;\
import javax.mail.*;\
import javax.mail.internet.*;\
import java.io.File;\
import java.io.UnsupportedEncodingException;\
import java.nio.file.Files;\
import java.nio.file.Path;\
import java.nio.file.Paths;\
import java.util.Properties;\
\
@Slf4j\
@Service\
public class MailServiceImpl implements MailService \{\
\
	@Value("$\{mail.from.mail.addr\}")\
	private String from;\
	@Value("$\{mail.from.mail.pass1\}")\
	private String password1;\
	@Value("$\{mail.from.mail.pass2\}")\
	private String password2;\
\
	@Override\
	public void sendMail(String to, String subject, String content, Path path) throws MessagingException, UnsupportedEncodingException \{\
		log.info("send start");\
		log.info("username >>> " + from);\
		log.info("p1 >>> " + password1);\
		log.info("p2 >>> " + password2);\
\
		Properties properties = new Properties();\
		properties.setProperty("mail.smtp.host", "smtp.163.com");\
		properties.setProperty("mail.smtp.username", from);\
		properties.setProperty("mail.smtp.password", password1);\
		properties.setProperty("mail.smtp.defaultEncoding", "UTF-8");\
		properties.setProperty("mail.smtp.auth", "true");\
//		
\f1 \'b0\'b2\'c8\'ab\'c0\'e0\'d0\'cd\'a3\'ba
\f0 ssl 
\f1 \'b6\'cb\'bf\'da\'ba\'c5\'a3\'ba
\f0 465\
		properties.setProperty("mail.smtp.port", "465");\
		properties.put("mail.smtp.ssl.enable", "true");\
\
		Session session = Session.getDefaultInstance(properties, new Authenticator() \{\
			@Override\
			protected PasswordAuthentication getPasswordAuthentication() \{\
				return new PasswordAuthentication(from, password2);\
			\}\
		\});\
\
		//
\f1 \'b5\'c3\'b5\'bd\'d2\'bb\'b8\'f6\'d3\'ca\'bc\'fe
\f0 \
		MimeMessage message = new MimeMessage(session);\
\
		// 
\f1 \'c9\'e8\'d6\'c3\'b7\'a2\'bc\'fe\'c8\'cb
\f0  from\
		message.setFrom(new InternetAddress(from));\
\
		//
\f1 \'c9\'e8\'d6\'c3\'ca\'d5\'bc\'fe\'c8\'cb
\f0  to\
		message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to, false));\
\
		//
\f1 \'c9\'e8\'d6\'c3\'d6\'f7\'cc\'e2
\f0  subject\
		message.setSubject(subject);\
\
		//
\f1 \'c9\'e8\'d6\'c3\'b0\'fc\'ba\'ac
\f0  html 
\f1 \'c4\'da\'c8\'dd\'b5\'c4
\f0  mimebodypart\
		Multipart multipart = new MimeMultipart();\
		BodyPart html = new MimeBodyPart();\
		html.setContent(content, "text/html; charset=utf-8");\
		multipart.addBodyPart(html);\
\
		//
\f1 \'c9\'e8\'d6\'c3\'b8\'bd\'bc\'fe\'a1\'a3\'a1\'a3\'a1\'a3
\f0 \
\
		if (path != null) \{\
			File file = path.toFile();\
\
			String fileName = file.getName();\
			log.info("fileName >>> " + fileName);\
			BodyPart bodyPart = new MimeBodyPart();\
			DataSource source = new FileDataSource(file);\
			bodyPart.setDataHandler(new DataHandler(source));\
			//
\f1 \'b1\'dc\'c3\'e2
\f0  filename 
\f1 \'c2\'d2\'c2\'eb
\f0 \
			bodyPart.setFileName(MimeUtility.encodeWord(fileName));\
			multipart.addBodyPart(bodyPart);\
		\}\
		//
\f1 \'c9\'e8\'d6\'c3\'d3\'ca\'bc\'fe\'c4\'da\'c8\'dd
\f0 \
		message.setContent(multipart);\
		Transport.send(message);\
		log.info("send end");\
	\}\
\}\
\
}